{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/Container/Container.module.scss","components/ContactList/ContactList.module.scss","components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","index.js","components/Filter/Filter.module.scss"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleFormSubmit","preventDefault","props","onSubmit","reset","this","className","styles","formLabel","formText","formInput","type","placeholder","onChange","formBtn","Component","ContactItem","contact","onDeleteContact","id","phoneNumber","href","contactBtn","onClick","ContactList","contacts","length","notification","map","defaultProps","Filter","filter","onChangeFilter","filterLabel","filterText","filterInput","Container","children","App","addNewContact","shortid","generate","find","alert","handleChangeFilter","getContactsToShow","toLowerCase","includes","handleDeleteContact","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProp","setItem","stringify","contactsToShow","title","titleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.936b7673.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__3C-9N\",\"formInput\":\"ContactForm_formInput__2KANG\",\"formBtn\":\"ContactForm_formBtn__lewyO\",\"formLabel\":\"ContactForm_formLabel__2pW-1\",\"formText\":\"ContactForm_formText__2w9Bs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1SP7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__1jmAT\",\"ContactItem\":\"ContactList_ContactItem__1eeRF\",\"contactBtn\":\"ContactList_contactBtn__26M-z\",\"phoneNumber\":\"ContactList_phoneNumber__3wTxV\",\"notification\":\"ContactList_notification__2jv5V\"};","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactForm.module.scss\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.ContactForm} onSubmit={this.handleFormSubmit}>\r\n        <label className={styles.formLabel}>\r\n          <span className={styles.formText}>Name</span>\r\n          <input\r\n            className={styles.formInput}\r\n            type=\"text\"\r\n            placeholder=\"Enter contact's name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.formLabel}>\r\n          <span className={styles.formText}>Number</span>\r\n          <input\r\n            className={styles.formInput}\r\n            type=\"tel\"\r\n            placeholder=\"Enter contact's number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.formBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactList.module.scss\";\r\n\r\nconst ContactItem = ({ contact, onDeleteContact }) => {\r\n  const { id, name, number } = contact;\r\n\r\n  return (\r\n    <li className={styles.ContactItem}>\r\n      <span>\r\n        {name}:\r\n        <a\r\n          className={styles.phoneNumber}\r\n          href={\"tel:\" + number}\r\n          aria-label=\"Call\"\r\n        >\r\n          {number}\r\n        </a>\r\n      </span>\r\n      <button className={styles.contactBtn} onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;","import PropTypes from \"prop-types\";\r\n\r\nimport ContactItem from \"./ContactItem\";\r\nimport styles from \"./ContactList.module.scss\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) =>\r\n  contacts.length === 0 ? (\r\n    <p className={styles.notification}>Contact book is empty</p>\r\n  ) : (\r\n    <ul className={styles.ContactList}>\r\n      {contacts.map((contact) => {\r\n        const { id } = contact;\r\n\r\n        return (\r\n          <ContactItem\r\n            key={id}\r\n            contact={contact}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n\r\nContactList.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Filter.module.scss\";\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => (\r\n  <label className={styles.filterLabel}>\r\n    <span className={styles.filterText}>Find contacts by name</span>\r\n    <input\r\n      className={styles.filterInput}\r\n      type=\"text\"\r\n      placeholder=\"Enter contact's name\"\r\n      value={filter}\r\n      onChange={onChangeFilter}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import styles from \"./Container.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport styles from \"./App.scss\";\nimport ContactFormWithClass from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Container from \"./components/Container/Container\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  addNewContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    if (!name || !number) {\n      alert(\"Please enter the correct name and number\");\n      return;\n    }\n\n    contacts.find(({ name }) => name === contact.name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n  };\n\n  handleChangeFilter = (event) => {\n    this.setState({\n      filter: event.currentTarget.value,\n    });\n  };\n\n  getContactsToShow = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  handleDeleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const contactsToShow = this.getContactsToShow();\n\n    return (\n      <Container>\n        <h1 className={styles.title}>Phonebook (class)</h1>\n        <ContactFormWithClass onSubmit={this.addNewContact} />\n\n        <h2 className={styles.titleContacts}>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.handleChangeFilter} />\n        <ContactList\n          contacts={contactsToShow}\n          onDeleteContact={this.handleDeleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1XpIO\",\"filterText\":\"Filter_filterText__1i8MV\",\"filterInput\":\"Filter_filterInput__kcmPk\"};"],"sourceRoot":""}